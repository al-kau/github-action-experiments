name: "Git Action Test"

on:
  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    env:
      name: Uno.App
      root-dirictory: src/Uno.App
      project-file-template: '{0}/{1}/{1}.{2}/{1}.{2}.csproj'  # root/name/name.target/name.target.csproj
    outputs:
      projects-map: ${{ steps.set-projects.outputs.result }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "matrix={\"include\":[{\"target\":\"default\",\"configuration\":\"Debug\"},{\"target\":\"ios\",\"configuration\":\"Release\"}]}" >> $GITHUB_OUTPUT
        
      - id: set-projects
        run: |
          result=$(cat << EOF
            {
              "solution":"${{ format('{0}/{1}.sln', env.root-dirictory, env.name) }}",
              "android":"${{ format(env.project-file-template, env.root-dirictory, env.name, 'Mobile') }}",
              "gtk":"${{ format(env.project-file-template, env.root-dirictory, env.name, 'Skia.Gtk') }}",
              "ios":"${{ format(env.project-file-template, env.root-dirictory, env.name, 'Mobile') }}",
              "macos":"${{ format(env.project-file-template, env.root-dirictory, env.name, 'Mobile') }}",
              "wasm":"${{ format(env.project-file-template, env.root-dirictory, env.name, 'Wasm') }}",
              "windows":"${{ format(env.project-file-template, env.root-dirictory, env.name, 'Windows') }}",
            }
          EOF
          )
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
  test-process:
    needs: configure
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.configure.outputs.matrix) }}
    env:
      dotnet-version: '7.0.x'
      configuration: ${{ matrix.configuration }}
      target: ${{ matrix.target }}
      projects-map: ${{ needs.configure.outputs.projects-map }}
    steps:
      - run: echo "matrix (${{ matrix.target }}; ${{ matrix.configuration }})"
      - run: echo "projects-map (${{ fromJSON(env.projects-map).solution }}; ${{ fromJSON(env.projects-map).android }})"
      
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          
      - name: Build All
        uses: ./.github/actions/build-uno-project
        with:
          projects-map: ${{ env.projects-map }}
          configuration: ${{ env.configuration }}
          target: ${{ env.target }}
 
