name: Build the Uno project
description: 
inputs:
  solution-name:
    description: 'Solution name'
    required: true
    type: string
  solution-root:
    description: 'Defines path to root directory'
    required: true
    type: string
  project-configuration:
    description: 'Defines the build configuration'
    required: false
    type: string
    default: Debug
  target:
    description: 'Defines the build target platform'
    required: false
    type: choice
    default: 'default'
    options: 
    - all
    - default
    - android
    - gtk
    - ios
    - macos
    - wasm
    - win
  solution-file:
    description: 'The solution file to build'
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.sln'
  android-project-file:
    description: 'Android project file to build
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.Mobile/${{ inputs.solution-name }}.Mobile.csproj'
  ios-project-file:
    description: 'iOS project file to build'
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.Mobile/${{ inputs.solution-name }}.Mobile.csproj'
  macos-project-file:
    description: 'MacOS project file to build'
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.Mobile/${{ inputs.solution-name }}.Mobile.csproj'
  gtk-project-file:
    description: 'GTK project file to build'
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.Skia.Gtk/${{ inputs.solution-name }}.Skia.Gtk.csproj'
  wasm-project-file:
    description: 'Wasm project file to build'
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.Wasm/${{ inputs.solution-name }}.Wasm.csproj'
  win-project-file:
    description: 'Windows project file to build'
      required: false
      type: string
      default: '${{ inputs.solution-root }}/${{ inputs.solution-name }}.Windows/${{ inputs.solution-name }}.Windows.csproj'      
runs:
  using: "composite"
  steps:
    - name: Build with msbuild
      id: build-initializer
      run: |
        case ${{ inputs.target }} in
          android)
            echo 'project-file=${{ inputs.android-project-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=dotnet' >> $GITHUB_OUTPUT
            ;;
          gtk)
            echo 'project-file=${{ inputs.gtk-project-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=dotnet' >> $GITHUB_OUTPUT          
            ;;
          ios)
            echo 'project-file=${{ inputs.ios-project-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=dotnet' >> $GITHUB_OUTPUT          
            ;;
          macos)
            echo 'project-file=${{ inputs.macos-project-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=dotnet' >> $GITHUB_OUTPUT          
            ;;
          wasm)
            echo 'project-file=${{ inputs.wasm-project-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=dotnet' >> $GITHUB_OUTPUT          
            ;;
          win)
            echo 'project-file=${{ inputs.win-project-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=dotnet' >> $GITHUB_OUTPUT          
            ;;              
          *)
            echo 'project-file=${{ inputs.solution-file }}' >> $GITHUB_OUTPUT
            echo 'build-properties=' >> $GITHUB_OUTPUT
            echo 'builder-type=msbuild' >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Build project
      uses: ./.github/actions/build-project
      with:
        project-file: ${{ steps.build-initializer.outputs.project-file }}
        project-configuration: ${{ inputs.project-configuration }}
        build-properties: ${{ steps.build-initializer.outputs.build-properties }}
        builder-type: ${{ steps.build-initializer.outputs.builder-type }}      
